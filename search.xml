<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于 Hexo 从零开始搭建个人博客（二）</title>
      <link href="/2023/04/01/hexobutterfly002/"/>
      <url>/2023/04/01/hexobutterfly002/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p>阅读本篇前，请先配置好响应的环境，请仔细阅读教程<a href="../hexobutterfly001/">基于 Hexo 从零开始搭建个人博客（一）</a></p></div><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ol><li>博客搭建过程中遇到问题，可以现在本页面搜索，检查是是否已经有该配置教程。</li><li>遇到问题可以在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到回复。</li><li>实在解决不了的问题可添加QQ或Wechat，添加好友时请备注自己的姓名+专业，如张学友 计算机科学与技术。</li></ol><h3 id="初始化Hexo项目"><a href="#初始化Hexo项目" class="headerlink" title="初始化Hexo项目"></a>初始化Hexo项目</h3><ol><li><p>在目标路径（我这里选择路径为【D:\web\WWW\blog-demo】）打开cmd命令窗口，执行 <code>hexo init</code>初始化项目。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo(项目名，可自行更改)</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" data-original="/2023/04/01/hexobutterfly002/hexoinit.jpg" alt="hexoinit.jpg"></p></li><li><p>进入<code>blog-demo</code>, 输入<code>npn i</code> 安装相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog-demo //进入blog-demo文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" data-original="/2023/04/01/hexobutterfly002/npm-i.jpg" alt="npm-i.jpg"></p></li><li><p>初始化项目后，blog-demo有如下结构<br>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【_config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息<br><img src="/img/loading.gif" data-original="/2023/04/01/hexobutterfly002/blog-demo.jpg" alt="blog-demo.jpg"></p></li><li><p>输入<code>hexo server</code>或者<code>hexo s</code>。<br><img src="/img/loading.gif" data-original="/2023/04/01/hexobutterfly002/hexo-s.jpg" alt="hexo-s.jpg"></p></li><li><p>打开浏览器，输入地址：<code>http://localhost:4000/</code> ，看到下面的效果，说明你的博客已经构建成功了。<br><img src="/img/loading.gif" data-original="/2023/04/01/hexobutterfly002/hexo.jpg" alt="hexo.jpg"></p></li></ol><h3 id="将静态博客挂载到-GitHub-Pages"><a href="#将静态博客挂载到-GitHub-Pages" class="headerlink" title="将静态博客挂载到 GitHub Pages"></a>将静态博客挂载到 GitHub Pages</h3><p>上一篇文章中，我们已经完成了对 GitHub 账户的注册以及 Github Pages 的创建，并且为 GitHub 配置了 SSH key, 我们将博客部署到 GitHub Pages 上即可。</p><h4 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 hexo-deployer-git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="修改-config-yml-文件"><a href="#修改-config-yml-文件" class="headerlink" title="修改 _config.yml 文件"></a>修改 _config.yml 文件</h4><p>在<code>blog-demo</code>目录下的<code>_config.yml</code>，就是整个<code>Hexo</code>框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述</p><p>修改最后一行的配置，将repository修改为你自己的github项目地址即可。</p><div class="note info no-icon flat"><p>请检查自己的默认分支是不是<code>master</code>。</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:muzilionly/muzilionly.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h4 id="部署项目到-GitHub"><a href="#部署项目到-GitHub" class="headerlink" title="部署项目到 GitHub"></a>部署项目到 GitHub</h4><p>修改好配置后，运行如下命令，将代码部署到 GitHub。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><ul><li>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</li><li>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</li><li>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</li></ul><p>如果出现<code>Deploy done</code>，则说明部署成功了。</p><p>打开浏览器访问：<a href="https://muzlionly.github.io">https://muzlionly.github.io</a> ，这时候我们就可以看到博客内容了。</p><div class="note warning no-icon flat"><p>部署可能不会立即生效，过一两分钟也是正常的哟！</p></div><p>那么，今天就讲到这里吧，立马去尝试一下吧！😀😀😀</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 Hexo 从零开始搭建个人博客（一）</title>
      <link href="/2023/03/25/hexobutterfly001/"/>
      <url>/2023/03/25/hexobutterfly001/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2020年那会有了搞个站点的想法，于是就有了这个博客。一开始玩了一段时间hexo-butterfly，看了大佬 <a href="https://butterfly.js.org/">Jerry</a> 的文档，一头雾水，无从下手，加上工作，生活的原因，便搁浅了很久。最近闲下来，想着有好多东西都想记录下来，所以就重拾了起来，一方面记录工作生活，另一方面想把一些技术都记录下来，方便自己能找到一些知识点。</p><div class="note warning simple"><ol><li>首先说明🤣，本人也是外行，纯属自己折腾着玩，欢迎评论区交流，但不一定 100% 能帮到你。</li><li>出错多 Google，百度真不顶用，半天搜不到一个有用的。</li><li>以下所有内容针对 hexo: 6.3.0，Butterfly 4.7.0 ，其他版本，请自行验证哦！</li></ol></div><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><div class="note info simple"><p>本教程主要面向Windows用户💻<br>其他用户可自行忽略🤞</p></div><div class="note warning simple"><p>🦋 Butterfly 已经更新到了<a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.7.0">4.7.0</a><br>📖 如果你使用的是旧版，教程会有些出入，请留意哦。</p></div><ul><li>操作系统：Windows11</li><li>Node</li><li>Git</li><li>Hexo</li><li>idea(推荐使用 Visual Studio Code)</li><li>一个GitHub账号</li><li>一个云服务器 【可选】</li><li>一个域名 【可选】</li></ul><h2 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h2><div class="tabs" id="方式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#方式-1">方式一</button></li><li class="tab"><button type="button" data-href="#方式-2">方式二</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="方式-1"><p>对于个人而言，建议用 <code>npm</code>来管理Node版本，请移步<a href="https://www.npmjs.com/">npm</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="方式-2"><p>如果你不需要灵活切换Node版本，走下面的教程即可</p><details><summary> 查看步骤 </summary>              <div class="content">              <ol><li><p>打开Node官网，下载和自己系统相配的Node安装程序，否则会出现安装问题。<br>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/nodeJsDownload.png" alt="NodeJsDownload.png"></p></li><li><p>下载后傻瓜式安装即可，安装的目录可以使用目录【C:/Program Files/nodejs/】，也可以自当路径。</p></li><li>安装完成后，检查是否安装成功。在键盘按下<kbd>win</kbd>+<kbd>R</kbd>键，输入<code>CMD</code>，然后回车，打开CMD窗口，执行node -v 命令，看到版本信息，则说明安装成功。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/cmd.jpg" alt="cmd.jpg"></li><li>修改npm 源。npm下载各种模块，默认是从国外服务器下载，速度较慢，建议搭配淘宝镜像。打开<code>CMD</code>窗口，运行如下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在目标路径打开<code>CMD</code>窗口，输入<code>npm install -g hexo-cli</code> 安装<code>Hexo</code>环境。<br>命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><br>安装完后，输入<code>hexo -v</code> 验证是否安装成功</p><p><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/hexo-v.jpg" alt="hexo-v.jpg"><br>看到上图，那么恭喜你哦！已经成功配置了<code>hexo</code>环境</p><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><ol><li>进入官网 <a href="https://github.com/">https://github.com/</a></li><li>点击右上角的Sign up(注册)，不是Sing in(登录)。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/github.webp" alt="github.webp"></li><li>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/githubReg.png" alt="github.webp"><br><code>github</code>会发送验证码到你的邮箱内，复制验证码到验证处验证即可。</li></ol><h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><p>点击右上角<code>+</code>按钮，选择<code>New repository</code>, 创建一个<code>&lt;用户名&gt;.gitghub.io</code>的仓库<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/newRepository.jpg" alt="newRepository.jp"><br>找不到入口的，访问：<a href="https://github.com/new">https://github.com/new</a></p><div class="note warning simple"><ul><li>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code></li><li>Description：为描述仓库（选填）</li><li>勾选 <code>Initialize this repository with a README</code> 初始化一个 README.md 文件</li><li>点击 <code>Creat repository</code> 进行创建</li></ul></div><p><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/createNewRepository.jpg" alt="createNewRepository.jpg"><br>上图显示我的仓库已经创建了，所以才会显示<code>The repository muzilionly.github.io already exists on this account.</code>,你们第一次创建是没有问题的。</p><h2 id="Git安装-amp-amp-关联Github"><a href="#Git安装-amp-amp-关联Github" class="headerlink" title="Git安装 &amp;&amp; 关联Github"></a>Git安装 &amp;&amp; 关联Github</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads </a>， 由于官网下载太慢可以通过淘宝的开源镜像下载网址：<br><a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a>，下载版本根据自己的需求选择即可。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/gitDownload.jpg" alt="gitDownload.jpg"></p></li><li><p>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。</p></li><li>点击电脑<code>Win</code>开始即可看见Git Bash。如下图<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/gitBash.jpg" alt="gitBash.jpg"></li></ol><ul><li><code>Git CMD</code> 是windows命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul><ol><li>打开<code>Git Bash</code> 后如下图所示即可代表安装完成。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/gitBashCmd.jpg" alt="gitBashCmd.jpg"></li></ol><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ol><li><p>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config -l // 查看所有配置</span><br><span class="line"></span><br><span class="line">git config --system --list // 查看系统配置</span><br><span class="line"></span><br><span class="line">git config --global --list // 查看用户(全局)配置</span><br></pre></td></tr></table></figure></li><li><p>配置用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名（即上面注册github时填写的用户名）&quot;</span></span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱（即上面注册github时填写的邮箱）&quot;</span></span><br></pre></td></tr></table></figure><p>输入后没有报错即表示设置成功。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/gitUserEmail.jpg" alt="gitUserEmail.jpg"><br>通过git config -l 检查是否配置成功，至此git安装以及配置全部完成。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/gitList.jpg" alt="gitList.jpg"></p></li></ol><h3 id="链接Github"><a href="#链接Github" class="headerlink" title="链接Github"></a>链接Github</h3><ol><li><p>生成ssh公钥，执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/ssh.jpg" alt="ssh.jpg"><br>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/id_rsa_pub.jpg" alt="id_rsa_pub.jpg"></p></li><li><p>将<code>SSH KEY</code>配置到<code>GitHub</code><br>进入Github，点击右上角头像 选择<code>settings</code><br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/githubSetting.jpg" alt="githubSetting.jpg"><br>进入设置页后选择 <code>SSH and GPG keys</code><br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/SSHandGPGkeys.jpg" alt="SSHandGPGkeys.jpg"><br>在标注次区域填入公钥信息<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/sshAddKeys.jpg" alt="sshAddKeys.jpg"></p><div class="note info no-icon flat"><p>注意: 要是有【Key type】的选择项 ，选择默认<code>Authentication Key</code> 即可。</p></div></li><li><p>测试链接，输入一下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现一下信息，那么恭喜你，你配置成功了🎉🎉🎉<br><img src="/img/loading.gif" data-original="/2023/03/25/hexobutterfly001/ssh-test.jpg" alt="ssh-test.jpg"><br>以上就是所有步骤，恭喜你已经完成了环境准备工作~</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 脚手架构建</title>
      <link href="/2023/03/25/hello-world/"/>
      <url>/2023/03/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
